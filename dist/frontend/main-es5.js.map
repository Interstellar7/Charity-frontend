{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/components/user-menu/user-menu.component.ts","webpack:///src/app/core/components/user-menu/user-menu.component.html","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/directives/has-role.directive.ts","webpack:///src/app/core/directives/validation-errors.directive.ts","webpack:///src/app/core/models/current-user.model.ts","webpack:///src/app/core/services/authorization.service.ts","webpack:///src/app/core/services/current-user.service.ts","webpack:///src/app/features/users/components/user-create-dialog/user-create-dialog.component.ts","webpack:///src/app/features/users/components/user-create-dialog/user-create-dialog.component.html","webpack:///src/app/features/users/components/user-edit-dialog/user-edit-dialog.component.ts","webpack:///src/app/features/users/components/user-edit-dialog/user-edit-dialog.component.html","webpack:///src/app/features/users/components/user-role-dialog/user-role-dialog.component.ts","webpack:///src/app/features/users/components/user-role-dialog/user-role-dialog.component.html","webpack:///src/app/features/users/components/users-table/users-table.component.ts","webpack:///src/app/features/users/components/users-table/users-table.component.html","webpack:///src/app/features/users/pipes/roleColor.pipe.ts","webpack:///src/app/features/users/services/role.service.ts","webpack:///src/app/features/users/services/user.service.ts","webpack:///src/app/features/users/users.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","loadChildren","m","HomePageModule","data","title","AuthPageModule","UsersPageModule","AdsPageModule","CabinetPageModule","ErrorPageModule","AppRoutingModule","forRoot","onSameUrlNavigation","imports","AppComponent","router","route","titleService","currentUser","sub","EMPTY","user$","pipe","events","event","subscribe","snapshot","getTitle","setTitle","children","child","childTitle","undefined","unsubscribe","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","UserMenuComponent","authService","activeRoute","Role","logout","loadProfile","next","authenticated","navigate","relativeTo","CoreModule","HasRoleDirective","template","vc","rolesSub","appHasRole","roles","Array","isArray","hasRole","has","view","createEmbeddedView","destroy","ValidationErrorsDirective","viewContainerRef","subscription","changes","processControlChange","appValidationErrorsOf","control","statusChanges","status","processValidityChange","clear","errors","Object","entries","forEach","key","value","$implicit","AuthorizationService","http","get","params","fromObject","username","password","headers","post","toString","providedIn","CurrentUserService","profile","user","userRoles","info","find","role","includes","loadCurrentUser","currentUserService","initialize","LOAD_CURRENT_USER_INITIALIZER","provide","useFactory","multi","deps","UserCreateDialogComponent","userService","dialog","createUser","close","response","error","form","controls","email","setErrors","email_duplicate","username_duplicate","confirmPassword","submitForm","changeConfirmPassword","read","UserEditDialogComponent","fb","buildForm","updateForm","f","userData","firstName","lastName","updateUser","pi","personalInfo","group","required","formValue","patchValue","handleEditSubmit","UserRoleDialogComponent","roleService","userRoleData","updateRoles","handleSetRoleSubmit","UsersTableComponent","dialogService","columns","selectedUserChange","refresh","row","selectedUser","emit","open","afterClosed","RoleColorPipe","ADMIN","MODERATOR","USER","name","RoleService","updateUserRole","put","JSON","stringify","UserService","UsersModule","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    loadChildren: () => import('./pages/home-page/home-page.module').then(m => m.HomePageModule),\r\n    data: {\r\n      title: 'Home'\r\n    }\r\n  },\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./pages/auth-page/auth-page.module').then(m => m.AuthPageModule),\r\n    data: {\r\n      title: ''\r\n    }\r\n  },\r\n\r\n  {\r\n    path: 'users',\r\n    loadChildren: () => import('./pages/users-page/users-page.module').then(m => m.UsersPageModule),\r\n    data: {\r\n      title: 'Users'\r\n    }\r\n  },\r\n\r\n    {\r\n      path: 'ads',\r\n      loadChildren: () => import('./pages/ads-page/ads-page.module').then(m => m.AdsPageModule),\r\n      data: {\r\n        title: 'Объявления'\r\n      }\r\n    },\r\n    {\r\n      path: 'cabinet',\r\n      loadChildren: () => import('./pages/cabinet-page/cabinet-page.module').then(m => m.CabinetPageModule),\r\n      data: {\r\n        title: 'Мой кабинет'\r\n      }\r\n    },\r\n  {\r\n    path: '**',\r\n    loadChildren: () => import('./pages/error-page/error-page.module').then(m => m.ErrorPageModule),\r\n    data: {\r\n      title: 'Not found'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    onSameUrlNavigation: 'reload',\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from \"rxjs\";\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, NavigationEnd, Router} from \"@angular/router\";\r\nimport {CurrentUserService} from \"./core/services/current-user.service\";\r\nimport {Title} from \"@angular/platform-browser\";\r\nimport {filter} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'Charity Service';\r\n\r\n  private sub = Subscription.EMPTY;\r\n\r\n  user$ = this.currentUser.user$.pipe();\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private titleService: Title,\r\n    private currentUser: CurrentUserService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.sub = this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n    ).subscribe(() => {\r\n      const snapshot = this.route.snapshot;\r\n\r\n      const title = this.getTitle(snapshot);\r\n      this.titleService.setTitle(title ?? this.title);\r\n    });\r\n  }\r\n\r\n  private getTitle(snapshot: ActivatedRouteSnapshot): string | undefined {\r\n    if ('title' in snapshot.data) {\r\n      return snapshot.data.title;\r\n    }\r\n    for (const child of snapshot.children) {\r\n      const childTitle = this.getTitle(child);\r\n      if (childTitle != undefined) {\r\n        return childTitle;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <h1 routerLink=\"/\" class=\"header-button\">{{title}}</h1>\r\n\r\n  <a mat-button routerLink=\"ads\">Объявления</a>\r\n\r\n  <a mat-button routerLink=\"cabinet\">Мой кабинет</a>\r\n\r\n  <div class=\"fill\"></div>\r\n\r\n  <app-user-menu></app-user-menu>\r\n</mat-toolbar>\r\n\r\n<div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {UsersModule} from \"./features/users/users.module\";\r\nimport {AdsModule} from \"./features/ads/ads.module\";\r\nimport {CoreModule} from \"./core/core.module\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n\r\n    CoreModule,\r\n    UsersModule,\r\n    MatToolbarModule,\r\n    MatButtonModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {CurrentUserService} from \"../../services/current-user.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {AuthorizationService} from \"../../services/authorization.service\";\r\nimport {Role} from \"../../models/current-user.model\";\r\n\r\n@Component({\r\n  selector: 'app-user-menu',\r\n  templateUrl: './user-menu.component.html',\r\n  styleUrls: ['./user-menu.component.css'],\r\n})\r\nexport class UserMenuComponent implements OnInit {\r\n  Role = Role;\r\n\r\n  readonly user$ = this.currentUser.user$;\r\n\r\n  constructor(\r\n    private currentUser: CurrentUserService,\r\n    private authService: AuthorizationService,\r\n    private activeRoute: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    this.authService.logout()\r\n      .subscribe(() => {\r\n          this.authService.loadProfile()\r\n            .subscribe(\r\n              () => {\r\n                throw new Error('Logout error 1!');\r\n              },\r\n              () => {\r\n                this.currentUser.user$.next({authenticated: false});\r\n                this.router.navigate([''], {\r\n                  relativeTo: this.activeRoute\r\n                });\r\n              }\r\n            );\r\n        },\r\n        () => {\r\n          throw new Error('Logout error 2!');\r\n        });\r\n  }\r\n}\r\n","<div *ngIf=\"user$ | async as user; else stub\">\r\n  <ng-container *ngIf=\"user.authenticated; else logInButton\">\r\n\r\n    <a *appHasRole=\"[Role.ADMIN]\" mat-button routerLink=\"users\">Users</a>\r\n\r\n    <span class=\"username\">{{user.info.username}}</span>\r\n\r\n    <button mat-stroked-button\r\n            (click)=\"handleLogoutClick()\">\r\n      Log Out\r\n    </button>\r\n  </ng-container>\r\n\r\n  <ng-template #logInButton>\r\n    <a *ngIf=\"!user.authenticated\"\r\n       mat-flat-button\r\n       color=\"accent\"\r\n       routerLink=\"/login\"\r\n    >\r\n      Log In\r\n    </a>\r\n  </ng-template>\r\n</div>\r\n\r\n<ng-template #stub>\r\n  <a\r\n     mat-flat-button\r\n     color=\"accent\"\r\n     routerLink=\"/login\"\r\n  >\r\n    Log In\r\n  </a>\r\n</ng-template>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {LOAD_CURRENT_USER_INITIALIZER} from \"./services/current-user.service\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {UserMenuComponent} from \"./components/user-menu/user-menu.component\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {HasRoleDirective} from \"./directives/has-role.directive\";\r\nimport { ValidationErrorsDirective } from './directives/validation-errors.directive';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserMenuComponent,\r\n    HasRoleDirective,\r\n    ValidationErrorsDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    LOAD_CURRENT_USER_INITIALIZER,\r\n  ],\r\n  exports: [\r\n    UserMenuComponent,\r\n    HasRoleDirective,\r\n    ValidationErrorsDirective\r\n  ]\r\n})\r\nexport class CoreModule {\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  isDevMode,\r\n  OnDestroy,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport {Subscription} from \"rxjs\";\r\nimport {CurrentUserService} from \"../services/current-user.service\";\r\nimport {Role} from \"../models/current-user.model\";\r\n\r\n@Directive({\r\n  selector: '[appHasRole]'\r\n})\r\nexport class HasRoleDirective implements OnInit, OnDestroy {\r\n\r\n  @Input() appHasRole!: Role | Role[];\r\n\r\n  private rolesSub = Subscription.EMPTY;\r\n  private view?: EmbeddedViewRef<void>;\r\n\r\n  constructor(private template: TemplateRef<void>,\r\n              private vc: ViewContainerRef,\r\n              private currentUser: CurrentUserService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.appHasRole == undefined) {\r\n      if (isDevMode()) {\r\n        throw Error('input is required');\r\n      }\r\n      return;\r\n    }\r\n    const roles = Array.isArray(this.appHasRole) ? this.appHasRole : [this.appHasRole];\r\n    this.rolesSub = this.currentUser.hasRole(...roles)\r\n      .subscribe(has => {\r\n        if (has) {\r\n          if (this.view == undefined) {\r\n            this.view = this.vc.createEmbeddedView(this.template);\r\n          }\r\n        } else {\r\n          if (this.view != undefined) {\r\n            this.view.destroy();\r\n            this.view = undefined;\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.rolesSub.unsubscribe();\r\n    if (this.view != undefined) {\r\n      this.view.destroy();\r\n      this.view = undefined;\r\n    }\r\n  }\r\n}\r\n","import {Directive, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef} from '@angular/core';\r\nimport {AbstractControl, NgModel} from \"@angular/forms\";\r\nimport {Subscription} from \"rxjs\";\r\n\r\ninterface ErrorContext {\r\n  $implicit: string;\r\n}\r\n\r\n@Directive({\r\n  selector: '[appValidationErrors]'\r\n})\r\nexport class ValidationErrorsDirective implements OnChanges, OnDestroy {\r\n\r\n  @Input()\r\n  appValidationErrorsOf?: NgModel | AbstractControl;\r\n\r\n  private subscription = Subscription.EMPTY;\r\n\r\n  constructor(private template: TemplateRef<ErrorContext>, private viewContainerRef: ViewContainerRef) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if ('appValidationErrorsOf' in changes) {\r\n      this.processControlChange();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private processControlChange() {\r\n    this.subscription.unsubscribe();\r\n    if (this.appValidationErrorsOf == undefined) {\r\n      return;\r\n    }\r\n\r\n    const control = this.appValidationErrorsOf;\r\n    this.subscription = control.statusChanges!.subscribe(status => {\r\n      this.processValidityChange(status, control);\r\n    });\r\n  }\r\n\r\n  private processValidityChange(status: 'VALID' | 'INVALID', control: NgModel | AbstractControl) {\r\n    this.viewContainerRef.clear();\r\n    if (status != 'INVALID' || control.errors == undefined) {\r\n      return;\r\n    }\r\n\r\n    Object.entries(control.errors).forEach(([key, value]) => {\r\n      switch (key) {\r\n        case 'required':\r\n          this.viewContainerRef.createEmbeddedView(this.template, {$implicit: 'Value is required'});\r\n          return;\r\n        case 'email_duplicate':\r\n          this.viewContainerRef.createEmbeddedView(this.template, {$implicit: 'Email is duplicate'});\r\n          return;\r\n        case 'username_duplicate':\r\n          this.viewContainerRef.createEmbeddedView(this.template, {$implicit: 'Username is duplicate'});\r\n          return;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export enum Role {\r\n  ADMIN = 'ADMIN',\r\n  MODERATOR = 'MODERATOR',\r\n  USER = 'USER'\r\n}\r\n\r\nexport interface PersonalInfo {\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\n\r\nexport interface AnonymousUser {\r\n  authenticated: false;\r\n}\r\n\r\nexport interface LoggedUser {\r\n  authenticated: true;\r\n  info: {\r\n    personalInfo: PersonalInfo;\r\n    username: string;\r\n    roles: Role[];\r\n  }\r\n}\r\n\r\nexport type CurrentUser = AnonymousUser | LoggedUser;\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {CurrentUser} from \"../models/current-user.model\";\r\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\r\nimport {AuthorizationModel} from \"../models/authorization.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizationService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  loadProfile(): Observable<CurrentUser> {\r\n    return this.http.get<CurrentUser>(`/api/profile`);\r\n  }\r\n\r\n  login(data: AuthorizationModel): Observable<void> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        username: data.username,\r\n        password: data.password\r\n      }\r\n    });\r\n\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    });\r\n\r\n    return this.http.post<void>('/auth/login', params.toString(), {\r\n      headers: headers\r\n    });\r\n  }\r\n\r\n  logout(): Observable<void> {\r\n    return this.http.post<void>('/auth/logout', null);\r\n  }\r\n}\r\n","import {APP_INITIALIZER, Injectable, Provider} from \"@angular/core\";\r\nimport {Observable, ReplaySubject} from \"rxjs\";\r\nimport {CurrentUser, Role} from \"../models/current-user.model\";\r\nimport {AuthorizationService} from \"./authorization.service\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CurrentUserService {\r\n  readonly user$ = new ReplaySubject<CurrentUser>(1);\r\n\r\n  constructor(private authService: AuthorizationService) {\r\n  }\r\n\r\n  initialize(): Promise<void> {\r\n    return new Promise<void>(resolve => {\r\n      this.authService.loadProfile().subscribe(\r\n        profile => {\r\n          this.user$.next(profile);\r\n          resolve();\r\n        },\r\n        () => {\r\n          this.user$.next({authenticated: false});\r\n          resolve();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  hasRole(...roles: Role[]): Observable<boolean> {\r\n    return this.user$.pipe(\r\n      map(user => {\r\n        if (!user.authenticated) {\r\n          return false;\r\n        }\r\n        const userRoles = user.info.roles;\r\n        return userRoles.find(role => roles.includes(role)) != undefined;\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function loadCurrentUser(currentUserService: CurrentUserService): () => Promise<void> {\r\n  return () => currentUserService.initialize();\r\n}\r\n\r\nexport const LOAD_CURRENT_USER_INITIALIZER: Provider = {\r\n  provide: APP_INITIALIZER,\r\n  useFactory: loadCurrentUser,\r\n  multi: true,\r\n  deps: [CurrentUserService]\r\n};\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {MatDialogRef} from \"@angular/material/dialog\";\r\nimport {CreateUserModel, UserModel} from \"../../models/user.model\";\r\nimport {NgForm, NgModel} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-user-create-dialog',\r\n  templateUrl: './user-create-dialog.component.html',\r\n  styleUrls: ['./user-create-dialog.component.css']\r\n})\r\nexport class UserCreateDialogComponent implements OnInit {\r\n\r\n  @ViewChild('form', {read: NgForm, static: false}) form!: NgForm;\r\n\r\n  constructor(private userService: UserService, private dialog: MatDialogRef<UserModel>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  submitForm(data: CreateUserModel) {\r\n    this.userService.createUser(data).subscribe((profile) => {\r\n        this.dialog.close(profile);\r\n      },\r\n      (response) => {\r\n        const error = response.error.error;\r\n\r\n        switch (error) {\r\n          case 'EMAIL_DUPLICATE':\r\n            this.form.controls.email.setErrors({\r\n              email_duplicate: true\r\n            });\r\n            break;\r\n          case 'USERNAME_DUPLICATE':\r\n            this.form.controls.username.setErrors({\r\n              username_duplicate: true\r\n            });\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  changeConfirmPassword(password: NgModel, confirmPassword: NgModel) {\r\n    if (confirmPassword.control.value !== password.control.value) {\r\n      confirmPassword.control.setErrors({error: true});\r\n    }\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n\r\n  <h1>Create user</h1>\r\n\r\n  <form class=\"form-fields\" #form=\"ngForm\" (ngSubmit)=\"submitForm(form.value)\">\r\n\r\n    <mat-form-field>\r\n      <mat-label>Username</mat-label>\r\n      <input matInput name=\"username\" ngModel required #username=\"ngModel\">\r\n      <mat-error *appValidationErrors=\"let error of username\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Password</mat-label>\r\n      <input matInput name=\"password\" type=\"password\" ngModel required #password=\"ngModel\">\r\n      <mat-error *appValidationErrors=\"let error of password\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Confirm password</mat-label>\r\n      <input matInput name=\"confirmPassword\" type=\"password\" ngModel required #confirmPassword=\"ngModel\"\r\n             (ngModelChange)=\"changeConfirmPassword(password, confirmPassword)\">\r\n      <mat-error *appValidationErrors=\"let error of confirmPassword\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>First name</mat-label>\r\n      <input matInput name=\"firstName\" ngModel required #firstName=\"ngModel\">\r\n      <mat-error *appValidationErrors=\"let error of firstName\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Last name</mat-label>\r\n      <input matInput name=\"lastName\" ngModel required #lastName=\"ngModel\">\r\n      <mat-error *appValidationErrors=\"let error of lastName\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Email</mat-label>\r\n      <input matInput name=\"email\" type=\"email\" ngModel required #email=\"ngModel\">\r\n      <mat-error *appValidationErrors=\"let error of email\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <button type=\"submit\" mat-button color=\"primary\" [disabled]=\"!form.valid\">\r\n      Save\r\n    </button>\r\n  </form>\r\n\r\n</div>\r\n","import {Component, Inject, Input, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {UpdateUserModel, UserModel} from \"../../models/user.model\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-user-edit-dialog',\r\n  templateUrl: './user-edit-dialog.component.html',\r\n  styleUrls: ['./user-edit-dialog.component.css']\r\n})\r\nexport class UserEditDialogComponent implements OnInit {\r\n\r\n  @Input()\r\n  user!: UserModel;\r\n  form!: FormGroup;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { user: UserModel },\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private dialog: MatDialogRef<UserModel>\r\n  ) {\r\n    this.user = data.user;\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateForm(this.user);\r\n  }\r\n\r\n\r\n  handleEditSubmit(f: UpdateUserModel) {\r\n    const userData = {\r\n      firstName: f.firstName,\r\n      lastName: f.lastName,\r\n      email: f.email\r\n    };\r\n\r\n    this.userService.updateUser(this.user.id, userData)\r\n      .subscribe(() => {\r\n          this.dialog.close(this.user);\r\n        },\r\n        (response) => {\r\n          const error = response.error.error;\r\n\r\n          switch (error) {\r\n            case 'EMAIL_DUPLICATE':\r\n              this.form.controls.email.setErrors({\r\n                email_duplicate: true\r\n              });\r\n              break;\r\n          }\r\n        });\r\n  }\r\n\r\n  private buildForm() {\r\n    const pi = this.user.personalInfo;\r\n\r\n    this.form = this.fb.group({\r\n      firstName: this.fb.control(pi.firstName, [Validators.required]),\r\n      lastName: this.fb.control(pi.lastName, [Validators.required]),\r\n      email: this.fb.control(pi.email, [Validators.email])\r\n    });\r\n  }\r\n\r\n  private updateForm(user: UserModel) {\r\n    const formValue = {\r\n      firstName: user.personalInfo.firstName,\r\n      lastName: user.personalInfo.lastName,\r\n      email: user.personalInfo.email\r\n    };\r\n\r\n    this.form.patchValue(formValue);\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n\r\n  <h1>Edit user info</h1>\r\n\r\n  <form class=\"form-fields\" [formGroup]=\"form\" (ngSubmit)=\"handleEditSubmit(form.value)\">\r\n    <mat-form-field>\r\n      <mat-label>First name</mat-label>\r\n      <input matInput required formControlName=\"firstName\">\r\n      <mat-error *appValidationErrors=\"let error of form.controls.firstName\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Last name</mat-label>\r\n      <input matInput required formControlName=\"lastName\">\r\n      <mat-error *appValidationErrors=\"let error of form.controls.lastName\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Email</mat-label>\r\n      <input matInput required formControlName=\"email\">\r\n      <mat-error *appValidationErrors=\"let error of form.controls.email\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <button type=\"submit\"\r\n            mat-button\r\n            color=\"primary\"\r\n            [disabled]=\"!form.valid\"\r\n    >\r\n      Update\r\n    </button>\r\n  </form>\r\n</div>\r\n","import {Component, Inject, Input, OnInit} from '@angular/core';\r\nimport {SetRolesUserModel, UserModel} from \"../../models/user.model\";\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Role} from \"../../../../core/models/current-user.model\";\r\nimport {RoleService} from \"../../services/role.service\";\r\n\r\n@Component({\r\n  selector: 'app-user-role-dialog',\r\n  templateUrl: './user-role-dialog.component.html',\r\n  styleUrls: ['./user-role-dialog.component.css']\r\n})\r\nexport class UserRoleDialogComponent implements OnInit {\r\n\r\n  Role = Role;\r\n\r\n  @Input()\r\n  user!: UserModel;\r\n  form!: FormGroup;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { user: UserModel },\r\n    private fb: FormBuilder,\r\n    private roleService: RoleService,\r\n    private dialog: MatDialogRef<UserModel>\r\n  ) {\r\n    this.user = data.user;\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateForm(this.user);\r\n  }\r\n\r\n\r\n  handleSetRoleSubmit(f: SetRolesUserModel) {\r\n    const userRoleData = {\r\n      roles: f.roles\r\n    };\r\n\r\n    this.roleService.updateRoles(this.user.id, userRoleData)\r\n      .subscribe(() => {\r\n        this.dialog.close(this.user);\r\n      });\r\n  }\r\n\r\n  private buildForm() {\r\n    this.form = this.fb.group({\r\n      roles: this.fb.control(this.user.roles, undefined)\r\n    });\r\n  }\r\n\r\n  private updateForm(user: UserModel) {\r\n    const formValue = {\r\n      roles: user.roles\r\n    };\r\n\r\n    this.form.patchValue(formValue);\r\n  }\r\n\r\n  getRoles() {\r\n    return Object.keys(this.Role);\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n\r\n  <h1>Set user roles</h1>\r\n\r\n  <form class=\"form-fields\" [formGroup]=\"form\" (ngSubmit)=\"handleSetRoleSubmit(form.value)\">\r\n\r\n    <p>Username: <b>{{user.username}}</b></p>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Roles</mat-label>\r\n      <mat-select formControlName=\"roles\" multiple>\r\n        <mat-option *ngFor=\"let role of getRoles()\" [value]=\"role\">{{role}}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <button type=\"submit\"\r\n            mat-button\r\n            color=\"primary\"\r\n            [disabled]=\"!form.valid\"\r\n    >\r\n      Update\r\n    </button>\r\n  </form>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {UserModel} from '../../models/user.model';\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {UserEditDialogComponent} from \"../user-edit-dialog/user-edit-dialog.component\";\r\nimport {UserRoleDialogComponent} from \"../user-role-dialog/user-role-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-users-table',\r\n  templateUrl: './users-table.component.html',\r\n  styleUrls: ['./users-table.component.css']\r\n})\r\nexport class UsersTableComponent implements OnInit {\r\n  columns = ['id', 'firstName', 'lastName', 'username', 'roles', 'actions'];\r\n\r\n  @Input()\r\n  users!: UserModel[];\r\n\r\n  @Input()\r\n  selectedUser?: UserModel;\r\n\r\n  @Output()\r\n  selectedUserChange = new EventEmitter<UserModel>();\r\n  @Output()\r\n  refresh = new EventEmitter();\r\n\r\n  constructor(private dialogService: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleSelectedRow(row: UserModel) {\r\n    this.selectedUser = row;\r\n    this.selectedUserChange.emit(row);\r\n  }\r\n\r\n  handleEditClick(row: UserModel) {\r\n    this.dialogService.open(UserEditDialogComponent, {\r\n      data: { user: row }\r\n    })\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.refresh.emit();\r\n      });\r\n  }\r\n\r\n  handleSetRoleClick(row: UserModel) {\r\n    this.dialogService.open(UserRoleDialogComponent, {\r\n      data: { user: row }\r\n    })\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.refresh.emit();\r\n      });\r\n  }\r\n}\r\n","<table mat-table class=\"full-width-table\" [dataSource]=\"users\">\r\n  <!-- Id Column -->\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef>ID</th>\r\n    <td mat-cell *matCellDef=\"let row\">\r\n      {{row.id}}\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n    <td mat-cell *matCellDef=\"let row\">\r\n<!--      <a mat-stroked-button [routerLink]=\"row.id\">View</a>-->\r\n      <button mat-stroked-button (click)=\"handleEditClick(row)\">Edit info</button>\r\n      <button mat-stroked-button color=\"primary\" (click)=\"handleSetRoleClick(row)\">Set Roles</button>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- firstName Column -->\r\n  <ng-container matColumnDef=\"firstName\">\r\n    <th mat-header-cell *matHeaderCellDef>First name</th>\r\n    <td mat-cell *matCellDef=\"let row\">{{row.personalInfo.firstName}}</td>\r\n  </ng-container>\r\n\r\n  <!-- lastName Column -->\r\n  <ng-container matColumnDef=\"lastName\">\r\n    <th mat-header-cell *matHeaderCellDef>Last name</th>\r\n    <td mat-cell *matCellDef=\"let row\">{{row.personalInfo.lastName}}</td>\r\n  </ng-container>\r\n\r\n  <!-- username Column -->\r\n  <ng-container matColumnDef=\"username\">\r\n    <th mat-header-cell *matHeaderCellDef>Username</th>\r\n    <td mat-cell *matCellDef=\"let row\">{{row.username}}</td>\r\n  </ng-container>\r\n\r\n  <!-- roleColor Column -->\r\n  <ng-container matColumnDef=\"roles\">\r\n    <th mat-header-cell *matHeaderCellDef>Roles</th>\r\n    <td mat-cell *matCellDef=\"let row\">\r\n      <mat-chip-list>\r\n        <mat-chip selected *ngFor=\"let role of row.roles\" color=\"{{role|roleColor}}\">{{role}}</mat-chip>\r\n      </mat-chip-list>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n  <tr\r\n    mat-row\r\n    *matRowDef=\"let row; columns: columns;\"\r\n    (click)=\"handleSelectedRow(row)\"\r\n    [class.selected-row]=\"selectedUser?.id == row.id\"\r\n  ></tr>\r\n</table>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {Role} from \"../../../core/models/current-user.model\";\r\nimport {MatChip} from \"@angular/material/chips\";\r\n\r\n@Pipe({\r\n  name: 'roleColor'\r\n})\r\nexport class RoleColorPipe implements PipeTransform {\r\n\r\n  transform(value: string): string;\r\n  transform(value?: string): string {\r\n    if (value == undefined) {\r\n      return '';\r\n    }\r\n\r\n    switch (value) {\r\n      case Role.ADMIN:\r\n        return 'warn';\r\n      case Role.MODERATOR:\r\n        return 'accent';\r\n      case Role.USER:\r\n        return 'primary';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {UpdateUserRoleModel} from \"../models/role.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n\r\n  private headers = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  updateRoles(id: string, updateUserRole: UpdateUserRoleModel): Observable<void> {\r\n    const data = {\r\n      roles: updateUserRole.roles\r\n    };\r\n\r\n    return this.http.put<void>(`/api/users/${id}/roles`, JSON.stringify(data), this.headers);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {CreateUserModel, UpdateUserModel, UserModel} from '../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private headers = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getUsers(): Observable<UserModel[]> {\r\n    return this.http.get<UserModel[]>(`/api/users`);\r\n  }\r\n\r\n  createUser(createUser: CreateUserModel): Observable<UserModel> {\r\n    const data = {\r\n      username: createUser.username,\r\n      password: createUser.password,\r\n      personalInfo: {\r\n        firstName: createUser.firstName,\r\n        lastName: createUser.lastName,\r\n        email: createUser.email\r\n      }\r\n    };\r\n\r\n    return this.http.post<UserModel>('/api/users', JSON.stringify(data), this.headers);\r\n  }\r\n\r\n  updateUser(id: string, updateUser: UpdateUserModel): Observable<UserModel> {\r\n    const data = {\r\n      personalInfo: {\r\n        firstName: updateUser.firstName,\r\n        lastName: updateUser.lastName,\r\n        email: updateUser.email\r\n      }\r\n    };\r\n\r\n    return this.http.put<UserModel>(`/api/users/${id}`, JSON.stringify(data), this.headers);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatTableModule} from \"@angular/material/table\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {UsersTableComponent} from \"./components/users-table/users-table.component\";\r\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\r\nimport {MatSortModule} from \"@angular/material/sort\";\r\nimport { RoleColorPipe } from './pipes/roleColor.pipe';\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatChipsModule} from \"@angular/material/chips\";\r\nimport { UserCreateDialogComponent } from './components/user-create-dialog/user-create-dialog.component';\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport { UserEditDialogComponent } from './components/user-edit-dialog/user-edit-dialog.component';\r\nimport { UserRoleDialogComponent } from './components/user-role-dialog/user-role-dialog.component';\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\nimport {CoreModule} from \"../../core/core.module\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UsersTableComponent,\r\n    RoleColorPipe,\r\n    UserCreateDialogComponent,\r\n    UserEditDialogComponent,\r\n    UserRoleDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatButtonModule,\r\n    MatChipsModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    CoreModule\r\n  ],\r\n  exports: [\r\n    UsersTableComponent\r\n  ]\r\n})\r\nexport class UsersModule {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}