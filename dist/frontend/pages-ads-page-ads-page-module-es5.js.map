{"version":3,"sources":["webpack:///src/app/features/ads/ads.module.ts","webpack:///src/app/features/ads/components/ads-list/ads-list.component.ts","webpack:///src/app/features/ads/components/ads-list/ads-list.component.html","webpack:///src/app/features/ads/components/categories-tree/categories-tree.component.ts","webpack:///src/app/features/ads/components/categories-tree/categories-tree.component.html","webpack:///src/app/features/ads/services/ad.service.ts","webpack:///src/app/features/ads/services/category.service.ts","webpack:///src/app/pages/ads-page/ads-page-routing.module.ts","webpack:///src/app/pages/ads-page/ads-page.component.ts","webpack:///src/app/pages/ads-page/ads-page.component.html","webpack:///src/app/pages/ads-page/ads-page.module.ts"],"names":["AdsModule","declarations","imports","exports","AdsListComponent","adService","selector","templateUrl","styleUrls","DynamicFlatNode","id","name","level","expandable","isLoading","DynamicDatabase","categoryService","rootLevelNodes","children","getCategories","subscribe","categories","parentId","String","providedIn","DynamicDataSource","_treeControl","_database","dataChange","collectionViewer","expansionModel","changed","change","added","removed","handleTreeControl","viewChange","pipe","data","forEach","node","toggleNode","slice","reverse","expand","requestChildren","setTimeout","getChildren","map","category","hasChildren","index","indexOf","splice","count","i","length","next","value","dataNodes","CategoriesTreeComponent","database","getLevel","isExpandable","hasChild","_","_nodeData","treeControl","dataSource","initialData","getRootNodes","AdService","http","headers","search","get","createAd","title","description","categoryId","post","JSON","stringify","updateAd","put","CategoryService","createCategory","updateCategory","routes","path","pathMatch","component","AdsPageRoutingModule","forChild","AdsPageComponent","AdsPageModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA2BaA,S;;;;;YAAAA;;;;yBAAAA,S;AAAS,O;AAAA,gBAZX,CACP,4DADO,EAEP,4DAFO,EAGP,oEAHO,EAIP,oEAJO,EAKP,mFALO,CAYW;;;;0HAATA,S,EAAS;AAAA,uBAflB,6GAekB,EAdlB,wFAckB;AAdF,kBAGhB,4DAHgB,EAIhB,4DAJgB,EAKhB,oEALgB,EAMhB,oEANgB,EAOhB,mFAPgB,CAcE;AAPE,kBAGpB,6GAHoB,EAIpB,wFAJoB;AAOF,O;AAHF,K;;;;;sEAGPA,S,EAAS;cAjBrB,sDAiBqB;eAjBZ;AACRC,sBAAY,EAAE,CACZ,6GADY,EAEZ,wFAFY,CADN;AAKRC,iBAAO,EAAE,CACP,4DADO,EAEP,4DAFO,EAGP,oEAHO,EAIP,oEAJO,EAKP,mFALO,CALD;AAYRC,iBAAO,EAAE,CACP,6GADO,EAEP,wFAFO;AAZD,S;AAiBY,Q;;;;;;;;;;;;;;;;;;AC3BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,gB;AAEX,gCAAoBC,SAApB,EAA0C;AAAA;;AAAtB,aAAAA,SAAA,GAAAA,SAAA;AACnB;;;;mCAEO,CACP;;;;;;;uBANUD,gB,EAAgB,+H;AAAA,K;;;YAAhBA,gB;AAAgB,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACR7B;;AAAI;;AAAQ;;;;;;;;sEDQCA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;AER7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGE;;AACE;;AACA;;AACF;;;;;;AADE;;AAAA;;;;;;AAUA;;;;;;AARF;;AACE;;AAEE;;AACE;;AACF;;AACF;;AACA;;AACA;;AAGF;;;;;;;;AATU;;AAAA;;AAEJ;;AAAA;;AAGJ;;AAAA;;AACkB;;AAAA;;;;QDNTC,e,GACX,yBAAmBC,EAAnB,EAAsCC,IAAtC,EACsC;AAAA,UADqBC,KACrB,uEAD6B,CAC7B;AAAA,UADuCC,UACvC,uEADoD,KACpD;AAAA,UAAnBC,SAAmB,uEAAP,KAAO;;AAAA;;AADnB,WAAAJ,EAAA,GAAAA,EAAA;AAAmB,WAAAC,IAAA,GAAAA,IAAA;AAAqB,WAAAC,KAAA,GAAAA,KAAA;AAAkB,WAAAC,UAAA,GAAAA,UAAA;AAC1D,WAAAC,SAAA,GAAAA,SAAA;AAAqB,K;;QAI7BC,e;AAKX,+BAAoBC,eAApB,EAAsD;AAAA;;AAAlC,aAAAA,eAAA,GAAAA,eAAA;AAHpB,aAAAC,cAAA,GAAgC,EAAhC;AACA,aAAAC,QAAA,GAA0B,EAA1B;AAGC;;;;uCAEW;AACV,iBAAO,KAAKD,cAAZ;AACD;;;sCAEU;AACT,iBAAO,KAAKC,QAAZ;AACD;;;sCAEa;AAAA;;AACZ,eAAKF,eAAL,CAAqBG,aAArB,GAAqCC,SAArC,CAA+C,UAAAC,UAAU;AAAA,mBAAI,KAAI,CAACJ,cAAL,GAAsBI,UAA1B;AAAA,WAAzD;AACD;;;wCAEeC,Q,EAAkB;AAAA;;AAChC,eAAKN,eAAL,CAAqBG,aAArB,CAAmC,EAAnC,EAAuCI,MAAM,CAACD,QAAD,CAA7C,EAAyDF,SAAzD,CAAmE,UAAAC,UAAU;AAAA,mBAAI,MAAI,CAACH,QAAL,GAAgBG,UAApB;AAAA,WAA7E;AACD;;;;;;;uBAtBUN,e,EAAe,kI;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBADH;;;;;sEACZA,e,EAAe;cAD3B,wDAC2B;eADhB;AAACS,oBAAU,EAAE;AAAb,S;AACgB,Q;;;;;;;QAyBfC,iB;AAUX,iCAAoBC,YAApB,EACoBC,SADpB,EAC8C;AAAA;;AAD1B,aAAAD,YAAA,GAAAA,YAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AATpB,aAAAC,UAAA,GAAa,IAAI,oDAAJ,CAAuC,EAAvC,CAAb;AASmD;;;;gCAE3CC,gB,EAAkC;AAAA;;AACxC,eAAKH,YAAL,CAAkBI,cAAlB,CAAiCC,OAAjC,CAAyCX,SAAzC,CAAmD,UAAAY,MAAM,EAAI;AAC3D,gBAAKA,MAA2C,CAACC,KAA5C,IACFD,MAA2C,CAACE,OAD/C,EACwD;AACtD,oBAAI,CAACC,iBAAL,CAAuBH,MAAvB;AACD;AACF,WALD;;AAOA,iBAAO,mDAAMH,gBAAgB,CAACO,UAAvB,EAAmC,KAAKR,UAAxC,EAAoDS,IAApD,CAAyD,2DAAI;AAAA,mBAAM,MAAI,CAACC,IAAX;AAAA,WAAJ,CAAzD,CAAP;AACD;;;mCAEUT,gB,EAAkC,CAAU;;;0CAErCG,M,EAA0C;AAAA;;AAC1D,cAAIA,MAAM,CAACC,KAAX,EAAkB;AAChBD,kBAAM,CAACC,KAAP,CAAaM,OAAb,CAAqB,UAAAC,IAAI;AAAA,qBAAI,MAAI,CAACC,UAAL,CAAgBD,IAAhB,EAAsB,IAAtB,CAAJ;AAAA,aAAzB;AACD;;AACD,cAAIR,MAAM,CAACE,OAAX,EAAoB;AAClBF,kBAAM,CAACE,OAAP,CAAeQ,KAAf,GAAuBC,OAAvB,GAAiCJ,OAAjC,CAAyC,UAAAC,IAAI;AAAA,qBAAI,MAAI,CAACC,UAAL,CAAgBD,IAAhB,EAAsB,KAAtB,CAAJ;AAAA,aAA7C;AACD;AACF;;;mCAEUA,I,EAAuBI,M,EAAiB;AAAA;;AACjD,eAAKjB,SAAL,CAAekB,eAAf,CAA+BL,IAAI,CAAC9B,EAApC;;AAEA8B,cAAI,CAAC1B,SAAL,GAAiB,IAAjB;AAEAgC,oBAAU,CAAC,YAAM;AACf,gBAAM5B,QAAQ,GAAG,MAAI,CAACS,SAAL,CAAeoB,WAAf,GAA6BC,GAA7B,CAAiC,UAAAC,QAAQ;AAAA,qBAAI,IAAIxC,eAAJ,CAAoBwC,QAAQ,CAACvC,EAA7B,EAAiCuC,QAAQ,CAACtC,IAA1C,EAAgD6B,IAAI,CAAC5B,KAAL,GAAa,CAA7D,EAAgEqC,QAAQ,CAACC,WAAzE,CAAJ;AAAA,aAAzC,CAAjB;;AACA,gBAAMC,KAAK,GAAG,MAAI,CAACb,IAAL,CAAUc,OAAV,CAAkBZ,IAAlB,CAAd;;AACA,gBAAI,CAACtB,QAAD,IAAaiC,KAAK,GAAG,CAAzB,EAA4B;AAAE;AAC5B;AACD;;AACD,gBAAIP,MAAJ,EAAY;AAAA;;AACV,mCAAI,CAACN,IAAL,EAAUe,MAAV,qBAAiBF,KAAK,GAAG,CAAzB,EAA4B,CAA5B,4BAAkCjC,QAAlC;AACD,aAFD,MAEO;AACL,kBAAIoC,KAAK,GAAG,CAAZ;;AACA,mBAAK,IAAIC,CAAC,GAAGJ,KAAK,GAAG,CAArB,EAAwBI,CAAC,GAAG,MAAI,CAACjB,IAAL,CAAUkB,MAAd,IACnB,MAAI,CAAClB,IAAL,CAAUiB,CAAV,EAAa3C,KAAb,GAAqB4B,IAAI,CAAC5B,KAD/B,EACsC2C,CAAC,IAAID,KAAK,EADhD,EACoD,CAAE;;AACtD,oBAAI,CAAChB,IAAL,CAAUe,MAAV,CAAiBF,KAAK,GAAG,CAAzB,EAA4BG,KAA5B;AACD,aAbc,CAef;;;AACA,kBAAI,CAAC1B,UAAL,CAAgB6B,IAAhB,CAAqB,MAAI,CAACnB,IAA1B;;AACAE,gBAAI,CAAC1B,SAAL,GAAiB,KAAjB;AACD,WAlBS,EAkBP,IAlBO,CAAV;AAmBD;;;4BAvDO;AAAwB,iBAAO,KAAKc,UAAL,CAAgB8B,KAAvB;AAA+B,S;0BACtDA,K,EAA0B;AACjC,eAAKhC,YAAL,CAAkBiC,SAAlB,GAA8BD,KAA9B;AACA,eAAK9B,UAAL,CAAgB6B,IAAhB,CAAqBC,KAArB;AACD;;;;;;QA2DUE,uB;AACX,uCAAYC,QAAZ,EAAuC;AAAA;;AAAA;;AAavC,aAAAC,QAAA,GAAW,UAACtB,IAAD;AAAA,iBAA2BA,IAAI,CAAC5B,KAAhC;AAAA,SAAX;;AAEA,aAAAmD,YAAA,GAAe,UAACvB,IAAD;AAAA,iBAA2BA,IAAI,CAAC3B,UAAhC;AAAA,SAAf;;AAEA,aAAAmD,QAAA,GAAW,UAACC,CAAD,EAAYC,SAAZ;AAAA,iBAA2CA,SAAS,CAACrD,UAArD;AAAA,SAAX;;AAhBE,aAAKsD,WAAL,GAAmB,IAAI,iEAAJ,CAAqC,KAAKL,QAA1C,EAAoD,KAAKC,YAAzD,CAAnB;AACA,aAAKK,UAAL,GAAkB,IAAI3C,iBAAJ,CAAsB,KAAK0C,WAA3B,EAAwCN,QAAxC,CAAlB;AAEAA,gBAAQ,CAACQ,WAAT;AACAvB,kBAAU,CAAC,YAAM;AACf,gBAAI,CAACsB,UAAL,CAAgB9B,IAAhB,GAAuBuB,QAAQ,CAACS,YAAT,GAAwBtB,GAAxB,CAA4B,UAAAC,QAAQ;AAAA,mBAAI,IAAIxC,eAAJ,CAAoBwC,QAAQ,CAACvC,EAA7B,EAAiCuC,QAAQ,CAACtC,IAA1C,EAAgD,CAAhD,EAAmDsC,QAAQ,CAACC,WAA5D,CAAJ;AAAA,WAApC,CAAvB;AACD,SAFS,EAER,IAFQ,CAAV;AAGD;;;;mCAWO,CAEP;;;;;;;uBAtBUU,uB,EAAuB,gEACZ7C,eADY,C;AACG,K;;;YAD1B6C,uB;AAAuB,sC;AAAA,c;AAAA,a;AAAA,0b;AAAA;AAAA;AC3GpC;;AAAI;;AAAe;;AAEnB;;AACE;;AAIA;;AAYF;;;;AAjBU;;AAAA,iGAAyB,aAAzB,EAAyB,eAAzB;;AAKO;;AAAA;;;;;;;;;sEDoGJA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTtD,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;gBACZO;;AAAe,O,EAAA,I;AAAA,K;;;;;;;;;;;;;;;;;AE5GvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQawD,S;AAQX,yBAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AANZ,aAAAC,OAAA,GAAU;AAChBA,iBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,4BAAgB;AADO,WAAhB;AADO,SAAV;AAOP;;;;+BAEMC,M,EAAc;AACnB,iBAAO,KAAKF,IAAL,CAAUG,GAAV,2BAA4CD,MAA5C,EAAP;AACD;;;kCAEShE,E,EAAU;AAChB,iBAAO,KAAK8D,IAAL,CAAUG,GAAV,oBAAmCjE,EAAnC,EAAP;AACD;;;iCAEMkE,S,EAAuB;AAC9B,cAAMtC,IAAI,GAAG;AACXuC,iBAAK,EAAED,SAAQ,CAACC,KADL;AAEXC,uBAAW,EAAEF,SAAQ,CAACE,WAFX;AAGXC,sBAAU,EAAEH,SAAQ,CAACG;AAHV,WAAb;AAMA,iBAAO,KAAKP,IAAL,CAAUQ,IAAV,CAAwB,UAAxB,EAAoCC,IAAI,CAACC,SAAL,CAAe5C,IAAf,CAApC,EAA0D,KAAKmC,OAA/D,CAAP;AACD;;;iCAEQ/D,E,EAAYyE,S,EAAuB;AAC1C,cAAM7C,IAAI,GAAG;AACXuC,iBAAK,EAAEM,SAAQ,CAACN,KADL;AAEXC,uBAAW,EAAEK,SAAQ,CAACL;AAFX,WAAb;AAKA,iBAAO,KAAKN,IAAL,CAAUY,GAAV,oBAAmC1E,EAAnC,GAAyCuE,IAAI,CAACC,SAAL,CAAe5C,IAAf,CAAzC,EAA+D,KAAKmC,OAApE,CAAP;AACD;;;qCAEY/D,E,EAAU;AACrB,iBAAO,KAAK8D,IAAL,8BAAmC9D,EAAnC,EAAP;AACD;;;;;;;uBAxCU6D,S,EAAS,uH;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACV/C,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;ACRtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa6D,e;AAQX,+BAAoBb,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AANZ,aAAAC,OAAA,GAAU;AAChBA,iBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,4BAAgB;AADO,WAAhB;AADO,SAAV;AAOP;;;;sCAEaC,M,EAAiBpD,Q,EAAiB;AAC9C,cAAG,CAACoD,MAAJ,EAAW;AAAEA,kBAAM,GAAG,EAAT;AAAa;;AAC1B,cAAG,CAACpD,QAAJ,EAAa;AAAEA,oBAAQ,GAAG,EAAX;AAAe;;AAC9B,iBAAO,KAAKkD,IAAL,CAAUG,GAAV,kCAAyDD,MAAzD,uBAA4EpD,QAA5E,EAAP;AACD;;;wCAEeZ,E,EAAU;AACtB,iBAAO,KAAK8D,IAAL,CAAUG,GAAV,2BAAgDjE,EAAhD,EAAP;AACD;;;uCAEY4E,e,EAAmC;AAChD,cAAMhD,IAAI,GAAG;AACX3B,gBAAI,EAAE2E,eAAc,CAAC3E,IADV;AAEXW,oBAAQ,EAAEgE,eAAc,CAAChE;AAFd,WAAb;AAKA,iBAAO,KAAKkD,IAAL,CAAUQ,IAAV,CAA8B,iBAA9B,EAAiDC,IAAI,CAACC,SAAL,CAAe5C,IAAf,CAAjD,EAAuE,KAAKmC,OAA5E,CAAP;AACD;;;uCAEc/D,E,EAAY6E,e,EAAmC;AAC5D,cAAMjD,IAAI,GAAG;AACX3B,gBAAI,EAAE4E,eAAc,CAAC5E;AADV,WAAb;AAIA,iBAAO,KAAK6D,IAAL,CAAUY,GAAV,2BAAgD1E,EAAhD,GAAsDuE,IAAI,CAACC,SAAL,CAAe5C,IAAf,CAAtD,EAA4E,KAAKmC,OAAjF,CAAP;AACD;;;2CAEkB/D,E,EAAU;AAC3B,iBAAO,KAAK8D,IAAL,qCAA0C9D,EAA1C,EAAP;AACD;;;;;;;uBAxCU2E,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACV7D,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACR5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMgE,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEvE,cAAQ,EAAE,CACR;AACEuE,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,MAFb;AAGEC,iBAAS,EAAE;AAHb,OADQ;AAFZ,KADqB,CAAvB;;QAkBaC,oB;;;;;YAAAA;;;;yBAAAA,oB;AAAoB,O;AAAA,gBAJtB,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CAIsB,EAHrB,4DAGqB;;;;0HAApBI,oB,EAAoB;AAAA;AAAA,kBAHrB,4DAGqB;AAAA,O;AAHT,K;;;;;sEAGXA,oB,EAAoB;cALhC,sDAKgC;eALvB;AACR1F,iBAAO,EAAE,CAAC,6DAAa2F,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERrF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAKuB,Q;;;;;;;;;;;;;;;;;;ACvBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa2F,gB;AAEX,gCAAoBzF,SAApB,EAAkDW,eAAlD,EAAoF;AAAA;;AAAhE,aAAAX,SAAA,GAAAA,SAAA;AAA8B,aAAAW,eAAA,GAAAA,eAAA;AACjD;;;;mCAEO,CACP;;;;;;;uBANU8E,gB,EAAgB,4I,EAAA,wJ;AAAA,K;;;YAAhBA,gB;AAAgB,+B;AAAA,c;AAAA,a;AAAA,+E;AAAA;AAAA;ACT7B;;AAAI;;AAAG;;AAEP;;AACE;;AAGA;;AAEF;;;;;;;;;sEDCaA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTxF,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiBauF,a;;;;;YAAAA;;;;yBAAAA,a;AAAa,O;AAAA,gBANf,CACP,4DADO,EAEP,6EAFO,EAGP,kEAHO,CAMe;;;;0HAAbA,a,EAAa;AAAA,uBARtB,oEAQsB;AARN,kBAGhB,4DAHgB,EAIhB,6EAJgB,EAKhB,kEALgB;AAQM,O;AAHb,K;;;;;sEAGAA,a,EAAa;cAVzB,sDAUyB;eAVhB;AACR9F,sBAAY,EAAE,CACZ,oEADY,CADN;AAIRC,iBAAO,EAAE,CACP,4DADO,EAEP,6EAFO,EAGP,kEAHO;AAJD,S;AAUgB,Q","file":"pages-ads-page-ads-page-module-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {CategoriesTreeComponent} from \"./components/categories-tree/categories-tree.component\";\r\nimport {AdsListComponent} from \"./components/ads-list/ads-list.component\";\r\nimport {MatTreeModule} from \"@angular/material/tree\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CategoriesTreeComponent,\r\n    AdsListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatTreeModule,\r\n    MatIconModule,\r\n    MatProgressBarModule\r\n  ],\r\n  exports: [\r\n    CategoriesTreeComponent,\r\n    AdsListComponent\r\n  ]\r\n})\r\nexport class AdsModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AdService} from \"../../services/ad.service\";\r\n\r\n@Component({\r\n  selector: 'ads-list',\r\n  templateUrl: './ads-list.component.html',\r\n  styleUrls: ['./ads-list.component.css']\r\n})\r\nexport class AdsListComponent implements OnInit {\r\n\r\n  constructor(private adService: AdService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<h1>Ads list</h1>\r\n","import {Component, OnInit, Injectable} from '@angular/core';\r\nimport {CategoryService} from \"../../services/category.service\";\r\nimport {CollectionViewer, SelectionChange, DataSource} from '@angular/cdk/collections';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {CategoryModel} from '../../models/category.model';\r\n\r\n\r\nexport class DynamicFlatNode {\r\n  constructor(public id: number, public name: string, public level = 1, public expandable = false,\r\n              public isLoading = false) {}\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DynamicDatabase {\r\n\r\n  rootLevelNodes: CategoryModel[]=[];\r\n  children: CategoryModel[]=[];\r\n\r\n  constructor(private categoryService: CategoryService) {\r\n  }\r\n\r\n  getRootNodes(): CategoryModel[] {\r\n    return this.rootLevelNodes;\r\n  }\r\n\r\n  getChildren(): CategoryModel[] {\r\n    return this.children;\r\n  }\r\n\r\n  initialData() {\r\n    this.categoryService.getCategories().subscribe(categories => this.rootLevelNodes = categories);\r\n  }\r\n\r\n  requestChildren(parentId: number) {\r\n    this.categoryService.getCategories('', String(parentId)).subscribe(categories => this.children = categories);\r\n  }\r\n}\r\n\r\nexport class DynamicDataSource implements DataSource<DynamicFlatNode> {\r\n\r\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\r\n\r\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\r\n  set data(value: DynamicFlatNode[]) {\r\n    this._treeControl.dataNodes = value;\r\n    this.dataChange.next(value);\r\n  }\r\n\r\n  constructor(private _treeControl: FlatTreeControl<DynamicFlatNode>,\r\n              private _database: DynamicDatabase ) {}\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\r\n    this._treeControl.expansionModel.changed.subscribe(change => {\r\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\r\n        (change as SelectionChange<DynamicFlatNode>).removed) {\r\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\r\n      }\r\n    });\r\n\r\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n  }\r\n\r\n  disconnect(collectionViewer: CollectionViewer): void {}\r\n\r\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\r\n    if (change.added) {\r\n      change.added.forEach(node => this.toggleNode(node, true));\r\n    }\r\n    if (change.removed) {\r\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\r\n    }\r\n  }\r\n\r\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\r\n    this._database.requestChildren(node.id);\r\n\r\n    node.isLoading = true;\r\n\r\n    setTimeout(() => {\r\n      const children = this._database.getChildren().map(category => new DynamicFlatNode(category.id, category.name, node.level + 1, category.hasChildren));\r\n      const index = this.data.indexOf(node);\r\n      if (!children || index < 0) { // If no children, or cannot find the node, no op\r\n        return;\r\n      }\r\n      if (expand) {\r\n        this.data.splice(index + 1, 0, ...children);\r\n      } else {\r\n        let count = 0;\r\n        for (let i = index + 1; i < this.data.length\r\n          && this.data[i].level > node.level; i++, count++) {}\r\n        this.data.splice(index + 1, count);\r\n      }\r\n\r\n      // notify the change\r\n      this.dataChange.next(this.data);\r\n      node.isLoading = false;\r\n    }, 1000);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'categories-tree',\r\n  templateUrl: './categories-tree.component.html',\r\n  styleUrls: ['./categories-tree.component.css']\r\n})\r\nexport class CategoriesTreeComponent implements OnInit {\r\n  constructor(database: DynamicDatabase) {\r\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\r\n\r\n    database.initialData();\r\n    setTimeout(() => {\r\n      this.dataSource.data = database.getRootNodes().map(category => new DynamicFlatNode(category.id, category.name, 0, category.hasChildren))\r\n    },1000);\r\n  }\r\n\r\n  treeControl: FlatTreeControl<DynamicFlatNode>;\r\n  dataSource: DynamicDataSource;\r\n\r\n  getLevel = (node: DynamicFlatNode) => node.level;\r\n\r\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\r\n\r\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<h1>Categories tree</h1>\r\n\r\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n    <button mat-icon-button disabled></button>\r\n    {{node.name}}\r\n  </mat-tree-node>\r\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n    <button mat-icon-button\r\n            [attr.aria-label]=\"'toggle ' + node.filename\" matTreeNodeToggle>\r\n      <mat-icon class=\"mat-icon-rtl-mirror\">\r\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n      </mat-icon>\r\n    </button>\r\n    {{node.name}}\r\n    <mat-progress-bar *ngIf=\"node.isLoading\"\r\n                      mode=\"indeterminate\"\r\n                      class=\"ads-tree-progress-bar\"></mat-progress-bar>\r\n  </mat-tree-node>\r\n</mat-tree>\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {CreateAdModel, UpdateAdModel, AdModel} from '../models/ad.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdService {\r\n\r\n  private headers = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAds(search: string): Observable<AdModel[]> {\r\n    return this.http.get<AdModel[]>(`/api/ads?search=${search}`);\r\n  }\r\n\r\n  getAdById(id: number): Observable<AdModel> {\r\n      return this.http.get<AdModel>(`/api/ads/${id}`);\r\n    }\r\n\r\n  createAd(createAd: CreateAdModel): Observable<AdModel> {\r\n    const data = {\r\n      title: createAd.title,\r\n      description: createAd.description,\r\n      categoryId: createAd.categoryId\r\n    };\r\n\r\n    return this.http.post<AdModel>('/api/ads', JSON.stringify(data), this.headers);\r\n  }\r\n\r\n  updateAd(id: number, updateAd: UpdateAdModel): Observable<AdModel> {\r\n    const data = {\r\n      title: updateAd.title,\r\n      description: updateAd.description\r\n    };\r\n\r\n    return this.http.put<AdModel>(`/api/ads/${id}`, JSON.stringify(data), this.headers);\r\n  }\r\n\r\n  deleteAdById(id: number): Observable<void> {\r\n    return this.http.delete<void>(`/api/ads/${id}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {CreateCategoryModel, UpdateCategoryModel, CategoryModel} from '../models/category.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  private headers = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getCategories(search?: string, parentId?: string ): Observable<CategoryModel[]> {\r\n    if(!search){ search = '' }\r\n    if(!parentId){ parentId = '' }\r\n    return this.http.get<CategoryModel[]>(`/api/categories?search=${search}&parentId=${parentId}`);\r\n  }\r\n\r\n  getCategoryById(id: number): Observable<CategoryModel> {\r\n      return this.http.get<CategoryModel>(`/api/categories/${id}`);\r\n    }\r\n\r\n  createCategory(createCategory: CreateCategoryModel): Observable<CategoryModel> {\r\n    const data = {\r\n      name: createCategory.name,\r\n      parentId: createCategory.parentId\r\n    };\r\n\r\n    return this.http.post<CategoryModel>('/api/categories', JSON.stringify(data), this.headers);\r\n  }\r\n\r\n  updateCategory(id: number, updateCategory: UpdateCategoryModel): Observable<CategoryModel> {\r\n    const data = {\r\n      name: updateCategory.name\r\n    };\r\n\r\n    return this.http.put<CategoryModel>(`/api/categories/${id}`, JSON.stringify(data), this.headers);\r\n  }\r\n\r\n  deleteCategoryById(id: number): Observable<void> {\r\n    return this.http.delete<void>(`/api/categories/${id}`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AdsPageComponent} from \"./ads-page.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        component: AdsPageComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AdsPageRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AdService} from \"../../features/ads/services/ad.service\";\r\nimport {CategoryService} from \"../../features/ads/services/category.service\";\r\n\r\n@Component({\r\n  selector: 'ads-page',\r\n  templateUrl: './ads-page.component.html',\r\n  styleUrls: ['./ads-page.component.css']\r\n})\r\nexport class AdsPageComponent implements OnInit {\r\n\r\n  constructor(private adService: AdService, private categoryService: CategoryService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<h1>ADS</h1>\r\n\r\n<div class=\"content-wrapper\">\r\n  <categories-tree class=\"categories-tree\">\r\n  </categories-tree>\r\n\r\n  <ads-list class=\"ads-list\">\r\n  </ads-list>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {AdsPageRoutingModule} from './ads-page-routing.module';\r\nimport {AdsPageComponent} from './ads-page.component';\r\nimport {AdsModule} from \"../../features/ads/ads.module\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdsPageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdsPageRoutingModule,\r\n    AdsModule\r\n  ]\r\n})\r\nexport class AdsPageModule {\r\n}\r\n"]}