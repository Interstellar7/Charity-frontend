{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/components/user-menu/user-menu.component.ts","./src/app/core/components/user-menu/user-menu.component.html","./src/app/core/core.module.ts","./src/app/core/directives/has-role.directive.ts","./src/app/core/directives/validation-errors.directive.ts","./src/app/core/models/current-user.model.ts","./src/app/core/services/authorization.service.ts","./src/app/core/services/current-user.service.ts","./src/app/features/users/components/user-create-dialog/user-create-dialog.component.ts","./src/app/features/users/components/user-create-dialog/user-create-dialog.component.html","./src/app/features/users/components/user-edit-dialog/user-edit-dialog.component.ts","./src/app/features/users/components/user-edit-dialog/user-edit-dialog.component.html","./src/app/features/users/components/user-role-dialog/user-role-dialog.component.ts","./src/app/features/users/components/user-role-dialog/user-role-dialog.component.html","./src/app/features/users/components/users-table/users-table.component.ts","./src/app/features/users/components/users-table/users-table.component.html","./src/app/features/users/pipes/roleColor.pipe.ts","./src/app/features/users/services/role.service.ts","./src/app/features/users/services/user.service.ts","./src/app/features/users/users.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    loadChildren: () => import('./pages/home-page/home-page.module').then(m => m.HomePageModule),\r\n    data: {\r\n      title: 'Home'\r\n    }\r\n  },\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./pages/auth-page/auth-page.module').then(m => m.AuthPageModule),\r\n    data: {\r\n      title: ''\r\n    }\r\n  },\r\n\r\n  {\r\n    path: 'users',\r\n    loadChildren: () => import('./pages/users-page/users-page.module').then(m => m.UsersPageModule),\r\n    data: {\r\n      title: 'Users'\r\n    }\r\n  },\r\n\r\n    {\r\n      path: 'ads',\r\n      loadChildren: () => import('./pages/ads-page/ads-page.module').then(m => m.AdsPageModule),\r\n      data: {\r\n        title: 'Объявления'\r\n      }\r\n    },\r\n    {\r\n      path: 'cabinet',\r\n      loadChildren: () => import('./pages/cabinet-page/cabinet-page.module').then(m => m.CabinetPageModule),\r\n      data: {\r\n        title: 'Мой кабинет'\r\n      }\r\n    },\r\n  {\r\n    path: '**',\r\n    loadChildren: () => import('./pages/error-page/error-page.module').then(m => m.ErrorPageModule),\r\n    data: {\r\n      title: 'Not found'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    onSameUrlNavigation: 'reload',\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from \"rxjs\";\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, NavigationEnd, Router} from \"@angular/router\";\r\nimport {CurrentUserService} from \"./core/services/current-user.service\";\r\nimport {Title} from \"@angular/platform-browser\";\r\nimport {filter} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'Charity Service';\r\n\r\n  private sub = Subscription.EMPTY;\r\n\r\n  user$ = this.currentUser.user$.pipe();\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private titleService: Title,\r\n    private currentUser: CurrentUserService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.sub = this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n    ).subscribe(() => {\r\n      const snapshot = this.route.snapshot;\r\n\r\n      const title = this.getTitle(snapshot);\r\n      this.titleService.setTitle(title ?? this.title);\r\n    });\r\n  }\r\n\r\n  private getTitle(snapshot: ActivatedRouteSnapshot): string | undefined {\r\n    if ('title' in snapshot.data) {\r\n      return snapshot.data.title;\r\n    }\r\n    for (const child of snapshot.children) {\r\n      const childTitle = this.getTitle(child);\r\n      if (childTitle != undefined) {\r\n        return childTitle;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <h1 routerLink=\"/\" class=\"header-button\">{{title}}</h1>\r\n\r\n  <a mat-button routerLink=\"ads\">Объявления</a>\r\n\r\n  <a mat-button routerLink=\"cabinet\">Мой кабинет</a>\r\n\r\n  <div class=\"fill\"></div>\r\n\r\n  <app-user-menu></app-user-menu>\r\n</mat-toolbar>\r\n\r\n<div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {UsersModule} from \"./features/users/users.module\";\r\nimport {AdsModule} from \"./features/ads/ads.module\";\r\nimport {CoreModule} from \"./core/core.module\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n\r\n    CoreModule,\r\n    UsersModule,\r\n    MatToolbarModule,\r\n    MatButtonModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {CurrentUserService} from \"../../services/current-user.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {AuthorizationService} from \"../../services/authorization.service\";\r\nimport {Role} from \"../../models/current-user.model\";\r\n\r\n@Component({\r\n  selector: 'app-user-menu',\r\n  templateUrl: './user-menu.component.html',\r\n  styleUrls: ['./user-menu.component.css'],\r\n})\r\nexport class UserMenuComponent implements OnInit {\r\n  Role = Role;\r\n\r\n  readonly user$ = this.currentUser.user$;\r\n\r\n  constructor(\r\n    private currentUser: CurrentUserService,\r\n    private authService: AuthorizationService,\r\n    private activeRoute: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    this.authService.logout()\r\n      .subscribe(() => {\r\n          this.authService.loadProfile()\r\n            .subscribe(\r\n              () => {\r\n                throw new Error('Logout error 1!');\r\n              },\r\n              () => {\r\n                this.currentUser.user$.next({authenticated: false});\r\n                this.router.navigate([''], {\r\n                  relativeTo: this.activeRoute\r\n                });\r\n              }\r\n            );\r\n        },\r\n        () => {\r\n          throw new Error('Logout error 2!');\r\n        });\r\n  }\r\n}\r\n","<div *ngIf=\"user$ | async as user; else stub\">\r\n  <ng-container *ngIf=\"user.authenticated; else logInButton\">\r\n\r\n    <a *appHasRole=\"[Role.ADMIN]\" mat-button routerLink=\"users\">Users</a>\r\n\r\n    <span class=\"username\">{{user.info.username}}</span>\r\n\r\n    <button mat-stroked-button\r\n            (click)=\"handleLogoutClick()\">\r\n      Log Out\r\n    </button>\r\n  </ng-container>\r\n\r\n  <ng-template #logInButton>\r\n    <a *ngIf=\"!user.authenticated\"\r\n       mat-flat-button\r\n       color=\"accent\"\r\n       routerLink=\"/login\"\r\n    >\r\n      Log In\r\n    </a>\r\n  </ng-template>\r\n</div>\r\n\r\n<ng-template #stub>\r\n  <a\r\n     mat-flat-button\r\n     color=\"accent\"\r\n     routerLink=\"/login\"\r\n  >\r\n    Log In\r\n  </a>\r\n</ng-template>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {LOAD_CURRENT_USER_INITIALIZER} from \"./services/current-user.service\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {UserMenuComponent} from \"./components/user-menu/user-menu.component\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {HasRoleDirective} from \"./directives/has-role.directive\";\r\nimport { ValidationErrorsDirective } from './directives/validation-errors.directive';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserMenuComponent,\r\n    HasRoleDirective,\r\n    ValidationErrorsDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    LOAD_CURRENT_USER_INITIALIZER,\r\n  ],\r\n  exports: [\r\n    UserMenuComponent,\r\n    HasRoleDirective,\r\n    ValidationErrorsDirective\r\n  ]\r\n})\r\nexport class CoreModule {\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  isDevMode,\r\n  OnDestroy,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport {Subscription} from \"rxjs\";\r\nimport {CurrentUserService} from \"../services/current-user.service\";\r\nimport {Role} from \"../models/current-user.model\";\r\n\r\n@Directive({\r\n  selector: '[appHasRole]'\r\n})\r\nexport class HasRoleDirective implements OnInit, OnDestroy {\r\n\r\n  @Input() appHasRole!: Role | Role[];\r\n\r\n  private rolesSub = Subscription.EMPTY;\r\n  private view?: EmbeddedViewRef<void>;\r\n\r\n  constructor(private template: TemplateRef<void>,\r\n              private vc: ViewContainerRef,\r\n              private currentUser: CurrentUserService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.appHasRole == undefined) {\r\n      if (isDevMode()) {\r\n        throw Error('input is required');\r\n      }\r\n      return;\r\n    }\r\n    const roles = Array.isArray(this.appHasRole) ? this.appHasRole : [this.appHasRole];\r\n    this.rolesSub = this.currentUser.hasRole(...roles)\r\n      .subscribe(has => {\r\n        if (has) {\r\n          if (this.view == undefined) {\r\n            this.view = this.vc.createEmbeddedView(this.template);\r\n          }\r\n        } else {\r\n          if (this.view != undefined) {\r\n            this.view.destroy();\r\n            this.view = undefined;\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.rolesSub.unsubscribe();\r\n    if (this.view != undefined) {\r\n      this.view.destroy();\r\n      this.view = undefined;\r\n    }\r\n  }\r\n}\r\n","import {Directive, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef} from '@angular/core';\r\nimport {AbstractControl, NgModel} from \"@angular/forms\";\r\nimport {Subscription} from \"rxjs\";\r\n\r\ninterface ErrorContext {\r\n  $implicit: string;\r\n}\r\n\r\n@Directive({\r\n  selector: '[appValidationErrors]'\r\n})\r\nexport class ValidationErrorsDirective implements OnChanges, OnDestroy {\r\n\r\n  @Input()\r\n  appValidationErrorsOf?: NgModel | AbstractControl;\r\n\r\n  private subscription = Subscription.EMPTY;\r\n\r\n  constructor(private template: TemplateRef<ErrorContext>, private viewContainerRef: ViewContainerRef) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if ('appValidationErrorsOf' in changes) {\r\n      this.processControlChange();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private processControlChange() {\r\n    this.subscription.unsubscribe();\r\n    if (this.appValidationErrorsOf == undefined) {\r\n      return;\r\n    }\r\n\r\n    const control = this.appValidationErrorsOf;\r\n    this.subscription = control.statusChanges!.subscribe(status => {\r\n      this.processValidityChange(status, control);\r\n    });\r\n  }\r\n\r\n  private processValidityChange(status: 'VALID' | 'INVALID', control: NgModel | AbstractControl) {\r\n    this.viewContainerRef.clear();\r\n    if (status != 'INVALID' || control.errors == undefined) {\r\n      return;\r\n    }\r\n\r\n    Object.entries(control.errors).forEach(([key, value]) => {\r\n      switch (key) {\r\n        case 'required':\r\n          this.viewContainerRef.createEmbeddedView(this.template, {$implicit: 'Value is required'});\r\n          return;\r\n        case 'email_duplicate':\r\n          this.viewContainerRef.createEmbeddedView(this.template, {$implicit: 'Email is duplicate'});\r\n          return;\r\n        case 'username_duplicate':\r\n          this.viewContainerRef.createEmbeddedView(this.template, {$implicit: 'Username is duplicate'});\r\n          return;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export enum Role {\r\n  ADMIN = 'ADMIN',\r\n  MODERATOR = 'MODERATOR',\r\n  USER = 'USER'\r\n}\r\n\r\nexport interface PersonalInfo {\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\n\r\nexport interface AnonymousUser {\r\n  authenticated: false;\r\n}\r\n\r\nexport interface LoggedUser {\r\n  authenticated: true;\r\n  info: {\r\n    personalInfo: PersonalInfo;\r\n    username: string;\r\n    roles: Role[];\r\n  }\r\n}\r\n\r\nexport type CurrentUser = AnonymousUser | LoggedUser;\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {CurrentUser} from \"../models/current-user.model\";\r\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\r\nimport {AuthorizationModel} from \"../models/authorization.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizationService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  loadProfile(): Observable<CurrentUser> {\r\n    return this.http.get<CurrentUser>(`/api/profile`);\r\n  }\r\n\r\n  login(data: AuthorizationModel): Observable<void> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        username: data.username,\r\n        password: data.password\r\n      }\r\n    });\r\n\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    });\r\n\r\n    return this.http.post<void>('/auth/login', params.toString(), {\r\n      headers: headers\r\n    });\r\n  }\r\n\r\n  logout(): Observable<void> {\r\n    return this.http.post<void>('/auth/logout', null);\r\n  }\r\n}\r\n","import {APP_INITIALIZER, Injectable, Provider} from \"@angular/core\";\r\nimport {Observable, ReplaySubject} from \"rxjs\";\r\nimport {CurrentUser, Role} from \"../models/current-user.model\";\r\nimport {AuthorizationService} from \"./authorization.service\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CurrentUserService {\r\n  readonly user$ = new ReplaySubject<CurrentUser>(1);\r\n\r\n  constructor(private authService: AuthorizationService) {\r\n  }\r\n\r\n  initialize(): Promise<void> {\r\n    return new Promise<void>(resolve => {\r\n      this.authService.loadProfile().subscribe(\r\n        profile => {\r\n          this.user$.next(profile);\r\n          resolve();\r\n        },\r\n        () => {\r\n          this.user$.next({authenticated: false});\r\n          resolve();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  hasRole(...roles: Role[]): Observable<boolean> {\r\n    return this.user$.pipe(\r\n      map(user => {\r\n        if (!user.authenticated) {\r\n          return false;\r\n        }\r\n        const userRoles = user.info.roles;\r\n        return userRoles.find(role => roles.includes(role)) != undefined;\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function loadCurrentUser(currentUserService: CurrentUserService): () => Promise<void> {\r\n  return () => currentUserService.initialize();\r\n}\r\n\r\nexport const LOAD_CURRENT_USER_INITIALIZER: Provider = {\r\n  provide: APP_INITIALIZER,\r\n  useFactory: loadCurrentUser,\r\n  multi: true,\r\n  deps: [CurrentUserService]\r\n};\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {MatDialogRef} from \"@angular/material/dialog\";\r\nimport {CreateUserModel, UserModel} from \"../../models/user.model\";\r\nimport {NgForm, NgModel} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-user-create-dialog',\r\n  templateUrl: './user-create-dialog.component.html',\r\n  styleUrls: ['./user-create-dialog.component.css']\r\n})\r\nexport class UserCreateDialogComponent implements OnInit {\r\n\r\n  @ViewChild('form', {read: NgForm, static: false}) form!: NgForm;\r\n\r\n  constructor(private userService: UserService, private dialog: MatDialogRef<UserModel>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  submitForm(data: CreateUserModel) {\r\n    this.userService.createUser(data).subscribe((profile) => {\r\n        this.dialog.close(profile);\r\n      },\r\n      (response) => {\r\n        const error = response.error.error;\r\n\r\n        switch (error) {\r\n          case 'EMAIL_DUPLICATE':\r\n            this.form.controls.email.setErrors({\r\n              email_duplicate: true\r\n            });\r\n            break;\r\n          case 'USERNAME_DUPLICATE':\r\n            this.form.controls.username.setErrors({\r\n              username_duplicate: true\r\n            });\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  changeConfirmPassword(password: NgModel, confirmPassword: NgModel) {\r\n    if (confirmPassword.control.value !== password.control.value) {\r\n      confirmPassword.control.setErrors({error: true});\r\n    }\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n\r\n  <h1>Create user</h1>\r\n\r\n  <form class=\"form-fields\" #form=\"ngForm\" (ngSubmit)=\"submitForm(form.value)\">\r\n\r\n    <mat-form-field>\r\n      <mat-label>Username</mat-label>\r\n      <input matInput name=\"username\" ngModel required #username=\"ngModel\">\r\n      <mat-error *appValidationErrors=\"let error of username\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Password</mat-label>\r\n      <input matInput name=\"password\" type=\"password\" ngModel required #password=\"ngModel\">\r\n      <mat-error *appValidationErrors=\"let error of password\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Confirm password</mat-label>\r\n      <input matInput name=\"confirmPassword\" type=\"password\" ngModel required #confirmPassword=\"ngModel\"\r\n             (ngModelChange)=\"changeConfirmPassword(password, confirmPassword)\">\r\n      <mat-error *appValidationErrors=\"let error of confirmPassword\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>First name</mat-label>\r\n      <input matInput name=\"firstName\" ngModel required #firstName=\"ngModel\">\r\n      <mat-error *appValidationErrors=\"let error of firstName\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Last name</mat-label>\r\n      <input matInput name=\"lastName\" ngModel required #lastName=\"ngModel\">\r\n      <mat-error *appValidationErrors=\"let error of lastName\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Email</mat-label>\r\n      <input matInput name=\"email\" type=\"email\" ngModel required #email=\"ngModel\">\r\n      <mat-error *appValidationErrors=\"let error of email\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <button type=\"submit\" mat-button color=\"primary\" [disabled]=\"!form.valid\">\r\n      Save\r\n    </button>\r\n  </form>\r\n\r\n</div>\r\n","import {Component, Inject, Input, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {UpdateUserModel, UserModel} from \"../../models/user.model\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-user-edit-dialog',\r\n  templateUrl: './user-edit-dialog.component.html',\r\n  styleUrls: ['./user-edit-dialog.component.css']\r\n})\r\nexport class UserEditDialogComponent implements OnInit {\r\n\r\n  @Input()\r\n  user!: UserModel;\r\n  form!: FormGroup;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { user: UserModel },\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private dialog: MatDialogRef<UserModel>\r\n  ) {\r\n    this.user = data.user;\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateForm(this.user);\r\n  }\r\n\r\n\r\n  handleEditSubmit(f: UpdateUserModel) {\r\n    const userData = {\r\n      firstName: f.firstName,\r\n      lastName: f.lastName,\r\n      email: f.email\r\n    };\r\n\r\n    this.userService.updateUser(this.user.id, userData)\r\n      .subscribe(() => {\r\n          this.dialog.close(this.user);\r\n        },\r\n        (response) => {\r\n          const error = response.error.error;\r\n\r\n          switch (error) {\r\n            case 'EMAIL_DUPLICATE':\r\n              this.form.controls.email.setErrors({\r\n                email_duplicate: true\r\n              });\r\n              break;\r\n          }\r\n        });\r\n  }\r\n\r\n  private buildForm() {\r\n    const pi = this.user.personalInfo;\r\n\r\n    this.form = this.fb.group({\r\n      firstName: this.fb.control(pi.firstName, [Validators.required]),\r\n      lastName: this.fb.control(pi.lastName, [Validators.required]),\r\n      email: this.fb.control(pi.email, [Validators.email])\r\n    });\r\n  }\r\n\r\n  private updateForm(user: UserModel) {\r\n    const formValue = {\r\n      firstName: user.personalInfo.firstName,\r\n      lastName: user.personalInfo.lastName,\r\n      email: user.personalInfo.email\r\n    };\r\n\r\n    this.form.patchValue(formValue);\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n\r\n  <h1>Edit user info</h1>\r\n\r\n  <form class=\"form-fields\" [formGroup]=\"form\" (ngSubmit)=\"handleEditSubmit(form.value)\">\r\n    <mat-form-field>\r\n      <mat-label>First name</mat-label>\r\n      <input matInput required formControlName=\"firstName\">\r\n      <mat-error *appValidationErrors=\"let error of form.controls.firstName\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Last name</mat-label>\r\n      <input matInput required formControlName=\"lastName\">\r\n      <mat-error *appValidationErrors=\"let error of form.controls.lastName\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Email</mat-label>\r\n      <input matInput required formControlName=\"email\">\r\n      <mat-error *appValidationErrors=\"let error of form.controls.email\">{{error}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <button type=\"submit\"\r\n            mat-button\r\n            color=\"primary\"\r\n            [disabled]=\"!form.valid\"\r\n    >\r\n      Update\r\n    </button>\r\n  </form>\r\n</div>\r\n","import {Component, Inject, Input, OnInit} from '@angular/core';\r\nimport {SetRolesUserModel, UserModel} from \"../../models/user.model\";\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Role} from \"../../../../core/models/current-user.model\";\r\nimport {RoleService} from \"../../services/role.service\";\r\n\r\n@Component({\r\n  selector: 'app-user-role-dialog',\r\n  templateUrl: './user-role-dialog.component.html',\r\n  styleUrls: ['./user-role-dialog.component.css']\r\n})\r\nexport class UserRoleDialogComponent implements OnInit {\r\n\r\n  Role = Role;\r\n\r\n  @Input()\r\n  user!: UserModel;\r\n  form!: FormGroup;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { user: UserModel },\r\n    private fb: FormBuilder,\r\n    private roleService: RoleService,\r\n    private dialog: MatDialogRef<UserModel>\r\n  ) {\r\n    this.user = data.user;\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateForm(this.user);\r\n  }\r\n\r\n\r\n  handleSetRoleSubmit(f: SetRolesUserModel) {\r\n    const userRoleData = {\r\n      roles: f.roles\r\n    };\r\n\r\n    this.roleService.updateRoles(this.user.id, userRoleData)\r\n      .subscribe(() => {\r\n        this.dialog.close(this.user);\r\n      });\r\n  }\r\n\r\n  private buildForm() {\r\n    this.form = this.fb.group({\r\n      roles: this.fb.control(this.user.roles, undefined)\r\n    });\r\n  }\r\n\r\n  private updateForm(user: UserModel) {\r\n    const formValue = {\r\n      roles: user.roles\r\n    };\r\n\r\n    this.form.patchValue(formValue);\r\n  }\r\n\r\n  getRoles() {\r\n    return Object.keys(this.Role);\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n\r\n  <h1>Set user roles</h1>\r\n\r\n  <form class=\"form-fields\" [formGroup]=\"form\" (ngSubmit)=\"handleSetRoleSubmit(form.value)\">\r\n\r\n    <p>Username: <b>{{user.username}}</b></p>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Roles</mat-label>\r\n      <mat-select formControlName=\"roles\" multiple>\r\n        <mat-option *ngFor=\"let role of getRoles()\" [value]=\"role\">{{role}}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <button type=\"submit\"\r\n            mat-button\r\n            color=\"primary\"\r\n            [disabled]=\"!form.valid\"\r\n    >\r\n      Update\r\n    </button>\r\n  </form>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {UserModel} from '../../models/user.model';\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {UserEditDialogComponent} from \"../user-edit-dialog/user-edit-dialog.component\";\r\nimport {UserRoleDialogComponent} from \"../user-role-dialog/user-role-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-users-table',\r\n  templateUrl: './users-table.component.html',\r\n  styleUrls: ['./users-table.component.css']\r\n})\r\nexport class UsersTableComponent implements OnInit {\r\n  columns = ['id', 'firstName', 'lastName', 'username', 'roles', 'actions'];\r\n\r\n  @Input()\r\n  users!: UserModel[];\r\n\r\n  @Input()\r\n  selectedUser?: UserModel;\r\n\r\n  @Output()\r\n  selectedUserChange = new EventEmitter<UserModel>();\r\n  @Output()\r\n  refresh = new EventEmitter();\r\n\r\n  constructor(private dialogService: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleSelectedRow(row: UserModel) {\r\n    this.selectedUser = row;\r\n    this.selectedUserChange.emit(row);\r\n  }\r\n\r\n  handleEditClick(row: UserModel) {\r\n    this.dialogService.open(UserEditDialogComponent, {\r\n      data: { user: row }\r\n    })\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.refresh.emit();\r\n      });\r\n  }\r\n\r\n  handleSetRoleClick(row: UserModel) {\r\n    this.dialogService.open(UserRoleDialogComponent, {\r\n      data: { user: row }\r\n    })\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.refresh.emit();\r\n      });\r\n  }\r\n}\r\n","<table mat-table class=\"full-width-table\" [dataSource]=\"users\">\r\n  <!-- Id Column -->\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef>ID</th>\r\n    <td mat-cell *matCellDef=\"let row\">\r\n      {{row.id}}\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n    <td mat-cell *matCellDef=\"let row\">\r\n<!--      <a mat-stroked-button [routerLink]=\"row.id\">View</a>-->\r\n      <button mat-stroked-button (click)=\"handleEditClick(row)\">Edit info</button>\r\n      <button mat-stroked-button color=\"primary\" (click)=\"handleSetRoleClick(row)\">Set Roles</button>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- firstName Column -->\r\n  <ng-container matColumnDef=\"firstName\">\r\n    <th mat-header-cell *matHeaderCellDef>First name</th>\r\n    <td mat-cell *matCellDef=\"let row\">{{row.personalInfo.firstName}}</td>\r\n  </ng-container>\r\n\r\n  <!-- lastName Column -->\r\n  <ng-container matColumnDef=\"lastName\">\r\n    <th mat-header-cell *matHeaderCellDef>Last name</th>\r\n    <td mat-cell *matCellDef=\"let row\">{{row.personalInfo.lastName}}</td>\r\n  </ng-container>\r\n\r\n  <!-- username Column -->\r\n  <ng-container matColumnDef=\"username\">\r\n    <th mat-header-cell *matHeaderCellDef>Username</th>\r\n    <td mat-cell *matCellDef=\"let row\">{{row.username}}</td>\r\n  </ng-container>\r\n\r\n  <!-- roleColor Column -->\r\n  <ng-container matColumnDef=\"roles\">\r\n    <th mat-header-cell *matHeaderCellDef>Roles</th>\r\n    <td mat-cell *matCellDef=\"let row\">\r\n      <mat-chip-list>\r\n        <mat-chip selected *ngFor=\"let role of row.roles\" color=\"{{role|roleColor}}\">{{role}}</mat-chip>\r\n      </mat-chip-list>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n  <tr\r\n    mat-row\r\n    *matRowDef=\"let row; columns: columns;\"\r\n    (click)=\"handleSelectedRow(row)\"\r\n    [class.selected-row]=\"selectedUser?.id == row.id\"\r\n  ></tr>\r\n</table>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {Role} from \"../../../core/models/current-user.model\";\r\nimport {MatChip} from \"@angular/material/chips\";\r\n\r\n@Pipe({\r\n  name: 'roleColor'\r\n})\r\nexport class RoleColorPipe implements PipeTransform {\r\n\r\n  transform(value: string): string;\r\n  transform(value?: string): string {\r\n    if (value == undefined) {\r\n      return '';\r\n    }\r\n\r\n    switch (value) {\r\n      case Role.ADMIN:\r\n        return 'warn';\r\n      case Role.MODERATOR:\r\n        return 'accent';\r\n      case Role.USER:\r\n        return 'primary';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {UpdateUserRoleModel} from \"../models/role.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n\r\n  private headers = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  updateRoles(id: string, updateUserRole: UpdateUserRoleModel): Observable<void> {\r\n    const data = {\r\n      roles: updateUserRole.roles\r\n    };\r\n\r\n    return this.http.put<void>(`/api/users/${id}/roles`, JSON.stringify(data), this.headers);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {CreateUserModel, UpdateUserModel, UserModel} from '../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private headers = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getUsers(): Observable<UserModel[]> {\r\n    return this.http.get<UserModel[]>(`/api/users`);\r\n  }\r\n\r\n  createUser(createUser: CreateUserModel): Observable<UserModel> {\r\n    const data = {\r\n      username: createUser.username,\r\n      password: createUser.password,\r\n      personalInfo: {\r\n        firstName: createUser.firstName,\r\n        lastName: createUser.lastName,\r\n        email: createUser.email\r\n      }\r\n    };\r\n\r\n    return this.http.post<UserModel>('/api/users', JSON.stringify(data), this.headers);\r\n  }\r\n\r\n  updateUser(id: string, updateUser: UpdateUserModel): Observable<UserModel> {\r\n    const data = {\r\n      personalInfo: {\r\n        firstName: updateUser.firstName,\r\n        lastName: updateUser.lastName,\r\n        email: updateUser.email\r\n      }\r\n    };\r\n\r\n    return this.http.put<UserModel>(`/api/users/${id}`, JSON.stringify(data), this.headers);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatTableModule} from \"@angular/material/table\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {UsersTableComponent} from \"./components/users-table/users-table.component\";\r\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\r\nimport {MatSortModule} from \"@angular/material/sort\";\r\nimport { RoleColorPipe } from './pipes/roleColor.pipe';\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatChipsModule} from \"@angular/material/chips\";\r\nimport { UserCreateDialogComponent } from './components/user-create-dialog/user-create-dialog.component';\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport { UserEditDialogComponent } from './components/user-edit-dialog/user-edit-dialog.component';\r\nimport { UserRoleDialogComponent } from './components/user-role-dialog/user-role-dialog.component';\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\nimport {CoreModule} from \"../../core/core.module\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UsersTableComponent,\r\n    RoleColorPipe,\r\n    UserCreateDialogComponent,\r\n    UserEditDialogComponent,\r\n    UserRoleDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatButtonModule,\r\n    MatChipsModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    CoreModule\r\n  ],\r\n  exports: [\r\n    UsersTableComponent\r\n  ]\r\n})\r\nexport class UsersModule {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}