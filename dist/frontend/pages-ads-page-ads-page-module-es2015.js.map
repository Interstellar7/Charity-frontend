{"version":3,"sources":["./src/app/features/ads/ads.module.ts","./src/app/features/ads/components/ads-list/ads-list.component.ts","./src/app/features/ads/components/ads-list/ads-list.component.html","./src/app/features/ads/components/categories-tree/categories-tree.component.ts","./src/app/features/ads/components/categories-tree/categories-tree.component.html","./src/app/features/ads/services/ad.service.ts","./src/app/features/ads/services/category.service.ts","./src/app/pages/ads-page/ads-page-routing.module.ts","./src/app/pages/ads-page/ads-page.component.ts","./src/app/pages/ads-page/ads-page.component.html","./src/app/pages/ads-page/ads-page.module.ts"],"names":[],"mappings":"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","file":"pages-ads-page-ads-page-module-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {CategoriesTreeComponent} from \"./components/categories-tree/categories-tree.component\";\r\nimport {AdsListComponent} from \"./components/ads-list/ads-list.component\";\r\nimport {MatTreeModule} from \"@angular/material/tree\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CategoriesTreeComponent,\r\n    AdsListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatTreeModule,\r\n    MatIconModule,\r\n    MatProgressBarModule\r\n  ],\r\n  exports: [\r\n    CategoriesTreeComponent,\r\n    AdsListComponent\r\n  ]\r\n})\r\nexport class AdsModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AdService} from \"../../services/ad.service\";\r\n\r\n@Component({\r\n  selector: 'ads-list',\r\n  templateUrl: './ads-list.component.html',\r\n  styleUrls: ['./ads-list.component.css']\r\n})\r\nexport class AdsListComponent implements OnInit {\r\n\r\n  constructor(private adService: AdService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<h1>Ads list</h1>\r\n","import {Component, OnInit, Injectable} from '@angular/core';\r\nimport {CategoryService} from \"../../services/category.service\";\r\nimport {CollectionViewer, SelectionChange, DataSource} from '@angular/cdk/collections';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {CategoryModel} from '../../models/category.model';\r\n\r\n\r\nexport class DynamicFlatNode {\r\n  constructor(public id: number, public name: string, public level = 1, public expandable = false,\r\n              public isLoading = false) {}\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DynamicDatabase {\r\n\r\n  rootLevelNodes: CategoryModel[]=[];\r\n  children: CategoryModel[]=[];\r\n\r\n  constructor(private categoryService: CategoryService) {\r\n  }\r\n\r\n  getRootNodes(): CategoryModel[] {\r\n    return this.rootLevelNodes;\r\n  }\r\n\r\n  getChildren(): CategoryModel[] {\r\n    return this.children;\r\n  }\r\n\r\n  initialData() {\r\n    this.categoryService.getCategories().subscribe(categories => this.rootLevelNodes = categories);\r\n  }\r\n\r\n  requestChildren(parentId: number) {\r\n    this.categoryService.getCategories('', String(parentId)).subscribe(categories => this.children = categories);\r\n  }\r\n}\r\n\r\nexport class DynamicDataSource implements DataSource<DynamicFlatNode> {\r\n\r\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\r\n\r\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\r\n  set data(value: DynamicFlatNode[]) {\r\n    this._treeControl.dataNodes = value;\r\n    this.dataChange.next(value);\r\n  }\r\n\r\n  constructor(private _treeControl: FlatTreeControl<DynamicFlatNode>,\r\n              private _database: DynamicDatabase ) {}\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\r\n    this._treeControl.expansionModel.changed.subscribe(change => {\r\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\r\n        (change as SelectionChange<DynamicFlatNode>).removed) {\r\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\r\n      }\r\n    });\r\n\r\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n  }\r\n\r\n  disconnect(collectionViewer: CollectionViewer): void {}\r\n\r\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\r\n    if (change.added) {\r\n      change.added.forEach(node => this.toggleNode(node, true));\r\n    }\r\n    if (change.removed) {\r\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\r\n    }\r\n  }\r\n\r\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\r\n    this._database.requestChildren(node.id);\r\n\r\n    node.isLoading = true;\r\n\r\n    setTimeout(() => {\r\n      const children = this._database.getChildren().map(category => new DynamicFlatNode(category.id, category.name, node.level + 1, category.hasChildren));\r\n      const index = this.data.indexOf(node);\r\n      if (!children || index < 0) { // If no children, or cannot find the node, no op\r\n        return;\r\n      }\r\n      if (expand) {\r\n        this.data.splice(index + 1, 0, ...children);\r\n      } else {\r\n        let count = 0;\r\n        for (let i = index + 1; i < this.data.length\r\n          && this.data[i].level > node.level; i++, count++) {}\r\n        this.data.splice(index + 1, count);\r\n      }\r\n\r\n      // notify the change\r\n      this.dataChange.next(this.data);\r\n      node.isLoading = false;\r\n    }, 1000);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'categories-tree',\r\n  templateUrl: './categories-tree.component.html',\r\n  styleUrls: ['./categories-tree.component.css']\r\n})\r\nexport class CategoriesTreeComponent implements OnInit {\r\n  constructor(database: DynamicDatabase) {\r\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\r\n\r\n    database.initialData();\r\n    setTimeout(() => {\r\n      this.dataSource.data = database.getRootNodes().map(category => new DynamicFlatNode(category.id, category.name, 0, category.hasChildren))\r\n    },1000);\r\n  }\r\n\r\n  treeControl: FlatTreeControl<DynamicFlatNode>;\r\n  dataSource: DynamicDataSource;\r\n\r\n  getLevel = (node: DynamicFlatNode) => node.level;\r\n\r\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\r\n\r\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<h1>Categories tree</h1>\r\n\r\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n    <button mat-icon-button disabled></button>\r\n    {{node.name}}\r\n  </mat-tree-node>\r\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n    <button mat-icon-button\r\n            [attr.aria-label]=\"'toggle ' + node.filename\" matTreeNodeToggle>\r\n      <mat-icon class=\"mat-icon-rtl-mirror\">\r\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n      </mat-icon>\r\n    </button>\r\n    {{node.name}}\r\n    <mat-progress-bar *ngIf=\"node.isLoading\"\r\n                      mode=\"indeterminate\"\r\n                      class=\"ads-tree-progress-bar\"></mat-progress-bar>\r\n  </mat-tree-node>\r\n</mat-tree>\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {CreateAdModel, UpdateAdModel, AdModel} from '../models/ad.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdService {\r\n\r\n  private headers = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAds(search: string): Observable<AdModel[]> {\r\n    return this.http.get<AdModel[]>(`/api/ads?search=${search}`);\r\n  }\r\n\r\n  getAdById(id: number): Observable<AdModel> {\r\n      return this.http.get<AdModel>(`/api/ads/${id}`);\r\n    }\r\n\r\n  createAd(createAd: CreateAdModel): Observable<AdModel> {\r\n    const data = {\r\n      title: createAd.title,\r\n      description: createAd.description,\r\n      categoryId: createAd.categoryId\r\n    };\r\n\r\n    return this.http.post<AdModel>('/api/ads', JSON.stringify(data), this.headers);\r\n  }\r\n\r\n  updateAd(id: number, updateAd: UpdateAdModel): Observable<AdModel> {\r\n    const data = {\r\n      title: updateAd.title,\r\n      description: updateAd.description\r\n    };\r\n\r\n    return this.http.put<AdModel>(`/api/ads/${id}`, JSON.stringify(data), this.headers);\r\n  }\r\n\r\n  deleteAdById(id: number): Observable<void> {\r\n    return this.http.delete<void>(`/api/ads/${id}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {CreateCategoryModel, UpdateCategoryModel, CategoryModel} from '../models/category.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  private headers = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getCategories(search?: string, parentId?: string ): Observable<CategoryModel[]> {\r\n    if(!search){ search = '' }\r\n    if(!parentId){ parentId = '' }\r\n    return this.http.get<CategoryModel[]>(`/api/categories?search=${search}&parentId=${parentId}`);\r\n  }\r\n\r\n  getCategoryById(id: number): Observable<CategoryModel> {\r\n      return this.http.get<CategoryModel>(`/api/categories/${id}`);\r\n    }\r\n\r\n  createCategory(createCategory: CreateCategoryModel): Observable<CategoryModel> {\r\n    const data = {\r\n      name: createCategory.name,\r\n      parentId: createCategory.parentId\r\n    };\r\n\r\n    return this.http.post<CategoryModel>('/api/categories', JSON.stringify(data), this.headers);\r\n  }\r\n\r\n  updateCategory(id: number, updateCategory: UpdateCategoryModel): Observable<CategoryModel> {\r\n    const data = {\r\n      name: updateCategory.name\r\n    };\r\n\r\n    return this.http.put<CategoryModel>(`/api/categories/${id}`, JSON.stringify(data), this.headers);\r\n  }\r\n\r\n  deleteCategoryById(id: number): Observable<void> {\r\n    return this.http.delete<void>(`/api/categories/${id}`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AdsPageComponent} from \"./ads-page.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        component: AdsPageComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AdsPageRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AdService} from \"../../features/ads/services/ad.service\";\r\nimport {CategoryService} from \"../../features/ads/services/category.service\";\r\n\r\n@Component({\r\n  selector: 'ads-page',\r\n  templateUrl: './ads-page.component.html',\r\n  styleUrls: ['./ads-page.component.css']\r\n})\r\nexport class AdsPageComponent implements OnInit {\r\n\r\n  constructor(private adService: AdService, private categoryService: CategoryService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<h1>ADS</h1>\r\n\r\n<div class=\"content-wrapper\">\r\n  <categories-tree class=\"categories-tree\">\r\n  </categories-tree>\r\n\r\n  <ads-list class=\"ads-list\">\r\n  </ads-list>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {AdsPageRoutingModule} from './ads-page-routing.module';\r\nimport {AdsPageComponent} from './ads-page.component';\r\nimport {AdsModule} from \"../../features/ads/ads.module\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdsPageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdsPageRoutingModule,\r\n    AdsModule\r\n  ]\r\n})\r\nexport class AdsPageModule {\r\n}\r\n"],"sourceRoot":"webpack:///"}